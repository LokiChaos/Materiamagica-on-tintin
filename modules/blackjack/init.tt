#nop 
#var {cardvalue} {{Ace}{11}{Two}{2}{Three}{3}{Four}{4}{Five}{5}{Six}{6}{Seven}{7}{Eight}{8}{Nine}{9}{Ten}{10}{Jack}{10}{Queen}{10}{King}{10}};

#var bj[soft]	0;
#var bj[total]	0;
#var bj[dealer]	0;
#var bj[action] {?};
#var bj[double] 0;

#act {^'Who is next?' a blackjack dealer asks.$} {bjgivedealer} {2}
#act {^A blackjack dealer asks, 'Who is next?'$} {bjgivedealer} {2}

#alias {bjgivedealer} {give blackjack dealer}


# Dealer total, determins hit/stay/dd behavior
#act {A blackjack dealer deals a %w of %w face up to himself.} {
	#var bj[dealer] {$cardvalue[%1]};
} {2}

#act {A blackjack dealer deals an %w of %w face up to himself.} {
	#var bj[dealer] {$cardvalue[%1]};
} {2}

#act {^Your current total is: %d (soft)$} {
	#var bj[soft] 1;
	#var bj[total]  {%1};
} {2}

#act {^Your current total is: %d$} {
	#var bj[soft]  0;
	#var bj[total]  {%1};
} {2}

#act {^A blackjack dealer asks, 'Will you hit, stay, or double down, Shinde?'$} {
	#var bj[double] 1;
	hitstanddouble;
} {2}

#act {^'Will you hit, stay, or double down, Shinde?' a blackjack dealer asks.$} {
	#var bj[double] 1;
	hitstanddouble;
} {2}

#act {^A blackjack dealer asks, 'Will you hit or stay, Shinde?'} {
	#var bj[double] 0;
	hitstanddouble;
} {2}

#act {^'Will you hit or stay, Shinde?' a blackjack dealer asks.$} {
	#var bj[double] 0;
	hitstanddouble;
} {2}

/*
A blackjack dealer says, 'You have bet %d gold pieces, Shinde.'
*/


#alias hitstanddouble {
	#script {bjaction} {modules/blackjack/bjlookup $bj[total] $bj[dealer] $bj[soft]};
	#var bj[action] {$bjaction[1]};
	#unvar bjaction;
	#if {$bj[double] == 0 && "$bj[action]" == "double"} {
		#if {$bj[total] > 17} {#var bj[action] {stay};}
		#else {#var bj[action]  {hit};};
	};
	#echo {<110>Your total is %d vs the dealers %d, you should %s.\n} {$bj[total]} {$bj[dealer]} {$bj[action]};
	say $bj[action];
}
