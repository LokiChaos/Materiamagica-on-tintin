#showme {<aef>Loading: <faa>info.tt}
/*
	Handles parsing output of informational game commands
	eg: checking your who, score, gold, time,
	alignment, skill spell/prof, etc.
*/

/* Displays detailed Room Information (uses GMCP) {{{ */
#alias {^roominfo} {
	#read core/info/roominfo.tt;
}
/* }}} */

/* Recall Where Augmentation {{{ */
#alias {recall where} {
	#class tmp_info_recall open;
	#gag {^Available recall points:$};
	#act {[1 ] Nearest area recall point (%* in %*)$} {
		#echo {<149>You are in the recall zone for <099>%%2<149>.<099>};
		#var navigation[recall_Room] {%1};
		#var navigation[recall_Area] {%2};
		#line gag;
	} {4};
	#gag {^[%W]};
	#gag {^* Your default recall point is:};
	#act {^* It will cost [%*] gp to change your default recall point.} {
		#line gag;
		#class tmp_info_recall kill;
	};
	#class tmp_info_recall close;
	#send {recall list}
}
/* }}} */

/* Scroll IDer (idscroll) {{{
	supportes regex on both name and short description */
#alias {idscroll} {
	#echo {<148>Looking up scrolls matching '<098>%0<148>'...};
	#script {__results} {awk -F : 'tolower($1) ~/%0/ || tolower($4) ~ /%0/ {print $1 " <148>(<098>" $4 "<148>)<098>"}' data/spells.txt};
	#if {&{__results[]}} {
		#foreach {${__results[]}} {__idx} {
			#echo {  ${__results[${__idx}]}}
		};
		#echo {<148>Returned <098>&{__results[]}<148> matches.};
	} {
		#echo {<118>No matches to '%0'!<099>}
	};
	#unvar __results;
	#unvar __idx;
}

/* }}} */

/* Returns repop time (in rl-minutes) for current area {{{ */
#alias {^repop$} {
	#echo {<149>Repop for this zone (<099>%s<149>) is <099>%d<149> minutes.<099>} {$gmcp[Room][zone]} {$navigation[repop]};
}
/* }}} */

/*  locate command {{{
	Gets sextant out, looks at it (syncing data) and returns it.
*/
#alias {^{loc|locate}$} {
	#if {"%1" == "%*silence%*"} {
		#var stateClient[muteLine] 1;
	};
	#class tmp_info_sextant read core/info/sextant.tt;
	
	#switch {$navigation[sextantCont]}
	{
		#case {0} {
			#nop;
		};
		#case {1} {
			locker get $navigation[sextant];
		};
		#default {
			get $navigation[sextant] $navigation[sextantCont];
		};
	};
	
	look $navigation[sextant];
	
	#switch {$navigation[sextantCont]}
	{
		#case {0} {
			#nop;
		};
		#case {1} {
			locker store $navigation[sextant];
		};
		#default {
			put $navigation[sextant] $navigation[sextantCont];
		};
	};
}
/* }}} */

/* whereis Location lookup command {{{ 
	This provides the whereis alias that allows one to get the current
	location of the following things:
		Riddenmast, Hallowhold, Merdraco ferries
		The Wansering Sidhe
		You can also lookup the location of game areas.
		You can regex-match the name, or search by
		plane, zone-type, or continent.
		
		You can also lookup the coordinates of worldgates and clanhalls
*/
#alias {whereis} {
	#class tmp_info_loc read core/info/locate.tt;
	#format {__cmdStr} {%l} {%0};	
	#switch {"${__cmdStr}"} {
		#case {"{wadering|sidhe|wandering sidhe}"} {
			_LocWanderingSidhe;
		};
		#case {"rid{|denmast}"} {
			_LocRiddenmast;
		};
		#case {"hallow{|hold}"} {
			_LocHallowhold;
		};
		#case {"mer{d|draco}"} {
			_LocMerdraco;
		};
		#case {"ferr{y|ies}"} {
			_LocMerdraco;
			_LocHallowhold;
			_LocRiddenmast;
		};
		#case {"air{|ship}"} {
			_LocAirship;
		};
		#case {"clan{|hall}%*"} {
			_LocClanHall ${__cmdStr};
		};
		#case {"{|help}"} {
			_LocHelp
		};
		#default {
			_LocArea {%0};
		};
	};
	#class tmp_info_loc kill;
	#unvar __cmdStr;
}
/* }}} */
