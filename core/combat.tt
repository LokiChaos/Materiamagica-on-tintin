#nop core/combat.tt;
/*
	Author: LokiChaos Â©2009-2016 Released under the ISC License (See doc/license.txt)
*/
#nop CLASS: combat;
#nop PROVIDES: core/combat;
#nop REQUIRES: core/state core/prompt;
/*
	Handles combat reformatting and parsing and use counts for
	weapons/defenses/bash/kick/back stab/BR/etc.
	Combat actions/macros should be defined by the user in $tt/user
*/

/* Called at the start of combat, initalizes variables */

/* */
_Event_register {combat_start} {initcombat} {_startCombat};
_Event_register {prompt_post}  {combatecho} {_combatEcho};
_Event_register {prompt_pre}   {combatform} {_combatGetFormHP};

#alias {_startCombat}
{
	#nop %1;
	#var combat[RoundNumber]    0;
	#var combat[Opponent]    {%2};
	#var combat[mobHealth]    100;
}

#alias {_combatGetFormHP} {
	#if { "%2" == "Default" } {
		#var combat[formHP] {};
		#regex {%3} {([%d%%]%w)%*<} {
			#var combat[formHP][p] {&1}
			#var combat[formHP][name] {&2};
			#format combat[formHP][print] {%s%a} {&1} {37};
		};
	}
}

/* Echo Vitals Line In place of prompt  {{{ */
#alias {_combatEcho} {
	#if { "%2" == "Default" && $stateChar[Combat]} {
	    #echo {%s [<158>%s%a<198>] %s<099>}
		      {$vitals[print]} {$combat[mobHealth]} {37}
			  {<169>$combat[formHP][print]};
	    #if {(0 - $vitals[dhp]) > $vitals[hp]} {
			#echo {<719>>> Damage exceeded half of remaing HP! <<<<099>};
		};
	};
}
/* }}} */

#sub  {%*'s fireshield erupts at your strike! You are burned on the %* by %*'s flames causing %*.}
	{%1's fireshield burns you on the %2 for %4.}



/* Bash/Kick/Charge/Sweep {{{ */
#act {^You bash %* over the head with %*.$} 
{
	_IncUses {bash};
}

#act {^You attempt to bash %* over the head with %*, but miss.$}
{
	_IncUses {bash};
}
/* }}} */

/* Your defenses {{{ */
#act {^You nimbly backflip out of the way %* attack.}
{
	_IncUses {acrobatics};
}

#act {^You catch %* on %*.$}
{
	_IncUses {shield block};
}

#act {^You skillfully parry %* attack.$}
{
	_IncUses {parry};
}

#act {^You dodge out of the way of %* attack.$}
{
	_IncUses {dodge};
}

#act {^You slip between planes for a moment, evading %* attack.$}
{
	_IncUses {magical fade};
}

#act {^%* lunges towards you, but you dodge out of the way.$}
{
	_IncUses {evasion};
}
/* }}} */

/* Exp Gain on Killing an opponent*/
#act {You receive %S experience points.} {
	_Event_raise {slain_opponent} {@std_str_dropcomma{%1}};
}

/* Superbrief combat */
#act {^You hit %* %w, missing %w and %w defends %w, leaving %w at %d percent. You are hit %w, are missed %w, and defend %w.$} {
	#line gag;
	#var stateChar[Combat]    2;
	#var combat[mobHealth] {%7};
	#echo {<129>You hit %1 %2, missing %3 and %4 defends %5.};
	#echo {<139>%n hits you %8, missing %9 and defend %10.} {%1};
}

/* Master combat trigger! */
#act {~^\e[1\;35m%* {is in perfect health|has several minor scratches|has several minor wounds and bruises|has some significant wounds|has some very significant wounds and scratches|looks pretty beaten up|is in terrible condition|is vomiting blood|screams in agony|pales visibly as death nears|is barely clinging to life}.}
{
	#var __HPTable {
	{is in perfect health}{100}
	{has several minor scratches}{95}
	{has several minor wounds and bruises}{80}
	{has some significant wounds}{70}
	{has some very significant wounds and scratches}{50}
	{looks pretty beaten up}{40}
	{is in terrible condition}{30}
	{is vomiting blood}{20}
	{screams in agony}{15}
	{pales visibly as death nears}{10}
	{is barely clinging to life}{5}
	};
	#var combat[mobHealth] {${__HPTable[%2]}};
	#unvar __HPTable;
	#line gag;
	#var stateChar[Combat]    2;
}

/* Verify loading */
#var loadState {1};
/* EOF */
